version: "3.3"

services:
  mysql:
    image: mysql:5.7.29
    container_name: mysql_${SITE}
    restart: unless-stopped
    tty: true
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: ${SERVICE_TAGS}
      SERVICE_NAME: ${SERVICE_NAME}
    networks:
      symfony_auth_dev:
        ipv4_address: 171.0.0.2

  php:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: php_${SITE}
    ports:
      - ${PHP_PORT}:9000
    volumes:
      - ./backend:/var/www/html/backend
    networks:
      symfony_auth_dev:
        ipv4_address: 171.0.0.3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: backend_${SITE}
    ports:
      - ${ADMIN_PORT}:80
    environment:
      - NGINX_HOST=${SITE_URL}
    volumes:
      - ./backend:/var/www/html/backend
    depends_on:
      - php
    networks:
      symfony_auth_dev:
        ipv4_address: 171.0.0.4

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend_${SITE}
    tty: true # docker run -t
    ports:
      - ${FRONTEND_PORT}:3000
    volumes:
      - ./frontend/:/var/www/html/frontend/
      - /var/www/html/frontend/node_modules
    working_dir: /var/www/html/frontend
    networks:
      symfony_auth_dev:
        ipv4_address: 171.0.0.5

  adminer:
    image: adminer
    container_name: adminer_${SITE}
    restart: always
    ports:
      - ${ADMINER_PORT}:8080
    networks:
      symfony_auth_dev:
        ipv4_address: 171.0.0.6

  composer:
    profiles: ["commands"]
    build:
      context: ./composer
      dockerfile: Dockerfile
    container_name: composer_${SITE}
    volumes:
      - ./backend:/var/www/html/backend
    working_dir: /var/www/html/backend
    user: symfony
    networks:
      symfony_auth_dev:
        ipv4_address: 171.0.0.7

  symfony:
    profiles: ["commands"]
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: artisan_${SITE}
    volumes:
      - ./backend:/var/www/html/backend
    working_dir: /var/www/html/backend
    entrypoint: ["php", "/var/www/html/backend/bin/console"]
    networks:
      symfony_auth_dev:
        ipv4_address: 171.0.0.8

  npm:
    profiles: ["commands"]
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: npm_${SITE}
    volumes:
      - ./frontend/:/var/www/html/frontend/
      - /var/www/html/frontend/node_modules
    working_dir: /var/www/html/frontend
    entrypoint: ["npm"]
    networks:
      symfony_auth_dev:
        ipv4_address: 171.0.0.9

networks:
  symfony_auth_dev:
    ipam:
      config:
        - subnet: ${SUBNET}/24
